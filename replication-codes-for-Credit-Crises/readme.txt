Files in the replication folder.

1) compute_steady_states.m

Solves and calibrates the baseline model as described in section 2 of the paper. The income shock process has to be supplied externally from inc_process.mat. The script generates three data files: par.mat contains the calibrated parameters, grid.mat contains the asset grid, and steady.mat the initial and terminal steady states for the credit crunch experiment. Note that setting the parameter rerun = 1 will load the data files computed previously. The logic of the calibration follows table 1 in the paper.

2) compute_transition.m

Computes transition dynamics following a permanent tightening of the borrowing constraint with flexible wages and no ZLB as described in section 3 of the paper. The code loads the mat files generated by compute_steady_states.m. Again, rerun = 1 can used to load the market-clearing interest rate path calculated previously. The algorithm starts with a guess for the sequence of interest rates. The guess is updated based on the bond market clearing condition in each period. If the households demand too much bonds, the interest rate is decreased and vice versa.

3) compute_transition_fix

Credit crunch experiment with fixed nominal wages and binding ZLB as described in section 4 of the paper. The algorithm starts with a guess for the sequence of interest rates and labor wedges. The interest rate is updated from the bond market clearing condition as before. The labor wedges are updated from the goods market clearing condition. If output is higher than consumption at the ZLB, then the wedge is increased to discourage labor supply.

4) find_cl.m

Helper function used to solve for optimal consumption at the borrowing constraint.